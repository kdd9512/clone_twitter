{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/CloneTw.js","components/TwFactory.js","routes/Home.js","components/Navi.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","pw","setPw","error","setError","newAccount","setNewAccount","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","CloneTw","cloneTwObj","isOwner","edit","setEdit","text","newEdit","setNewEdit","onDeleteClick","window","confirm","doc","id","delete","refFromURL","uploadedUrl","toggleEditing","update","src","faTrash","faPencilAlt","TwFactory","userObj","cloneTw","setCloneTw","uploadFile","setUploadFile","fileRef","ref","child","uid","uuidv4","putString","resp","getDownloadURL","tweet","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","previewFile","files","reader","FileReader","onloadend","finEv","result","currentTarget","readAsDataURL","opacity","alt","backgroundImage","faTimes","Home","newTw","setNewTw","useEffect","orderBy","onSnapshot","snapshot","cloneTwArray","docs","map","marginTop","Navi","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","history","useHistory","newDispName","setNewDispName","getCloneTw","where","get","updateProfile","autoFocus","signOut","push","AppRouter","refreshUser","isLogin","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","styles","document","getElementById"],"mappings":"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","file":"static/js/main.a60bd2d8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\r\nimport {authService} from \"../fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pw, setPw] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"pw\") {\r\n            setPw(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    pw\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    pw\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Your Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"pw\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={pw}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {authService, firebaseInstance} from \"../fbase\";\r\nimport AuthForm from \"../components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}} = event;\r\n\r\n        if (name === \"google\") {\r\n            await authService.signInWithPopup(\r\n                new firebaseInstance.auth.GoogleAuthProvider()\r\n            )\r\n        } else if (name === \"github\") {\r\n            await authService.signInWithPopup(\r\n                new firebaseInstance.auth.GithubAuthProvider()\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <span>Please Log In</span>\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"google\"\r\n                    className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle}\r\n                />\r\n                    </button>\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"github\"\r\n                    className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub}\r\n                />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Auth;\r\n","import React, {useState} from \"react\";\r\nimport {dbService, storageService} from \"../fbase\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CloneTw = ({cloneTwObj, isOwner}) => {\r\n    const [edit, setEdit] = useState(false); // 수정모드인가 아닌가를 따지기 위함.\r\n    const [newEdit, setNewEdit] = useState(cloneTwObj.text); // DB상의 값 cloneTwObj.text를 변경하기 위함.\r\n\r\n    const onDeleteClick = async () => {\r\n        const conf = window.confirm(\"Are you sure you want to delete this message?\");\r\n        if (conf) {\r\n            await dbService.doc(`cloneTw/${cloneTwObj.id}`).delete();\r\n            await storageService.refFromURL(cloneTwObj.uploadedUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEdit((prev) => !prev);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await dbService.doc(`cloneTw/${cloneTwObj.id}`).update({\r\n            text: newEdit,\r\n        });\r\n        setEdit(false);\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: {value},\r\n        } = e;\r\n        setNewEdit(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cloneTw\">\r\n            {edit ? (\r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                            <form onSubmit={onSubmit} className=\"container cloneTwEdit\">\r\n                                <input\r\n                                    onChange={onChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Edit this Message\"\r\n                                    value={newEdit}\r\n                                    required/>\r\n                                <input type=\"submit\" value=\"Update cloneTw\" className=\"formBtn\"/>\r\n                            </form>\r\n                            <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                CANCEL\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{cloneTwObj.text}</h4>\r\n                    {cloneTwObj.uploadedUrl && <img src={cloneTwObj.uploadedUrl}/>}\r\n                    {isOwner && (\r\n                        <div className=\"cloneTw__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash}/>\r\n                        </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt}/>\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CloneTw;","import React, {useState} from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {dbService, storageService} from \"../fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TwFactory = ({userObj}) => {\r\n    const [cloneTw, setCloneTw] = useState(\"\");\r\n    const [uploadFile, setUploadFile] = useState(\"\");\r\n\r\n    const onSubmit = async (e) => {\r\n        if (cloneTw === \"\") {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n\r\n        let uploadedUrl = \"\";\r\n        if (uploadFile !== \"\") {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const resp = await fileRef.putString(uploadFile, \"data_url\");\r\n            uploadedUrl = await resp.ref.getDownloadURL();\r\n        }\r\n\r\n        const tweet = {\r\n            text: cloneTw,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            uploadedUrl,\r\n        };\r\n\r\n        await dbService.collection(\"cloneTw\").add(tweet);\r\n        setCloneTw(\"\");\r\n        setUploadFile(\"\");\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: {value},\r\n        } = e;\r\n        setCloneTw(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {\r\n            target: {files},\r\n        } = e;\r\n\r\n        const previewFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finEv) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finEv;\r\n            setUploadFile(result);\r\n        }\r\n        reader.readAsDataURL(previewFile);\r\n    };\r\n\r\n    const cancelUpload = () => setUploadFile(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={cloneTw}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </label>\r\n\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {/*어떤 종류의 이미지만을 허용하는 input*/}\r\n\r\n            <input\r\n                type=\"submit\"\r\n                value=\"cloneTw\"\r\n            />\r\n\r\n            {uploadFile && (\r\n                <div>\r\n                    <img\r\n                        src={uploadFile}\r\n                        alt=\"uploaded image file\"\r\n                        style={{\r\n                            backgroundImage: uploadFile,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={cancelUpload}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {/*파일이 업로드 되었을 때에만 img 태그가 보임*/}\r\n        </form>\r\n    )\r\n};\r\nexport default TwFactory;","import React, {useEffect, useState} from \"react\";\r\nimport {dbService, storageService} from \"../fbase\";\r\nimport CloneTw from \"../components/CloneTw\";\r\nimport TwFactory from \"components/TwFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [newTw, setNewTw] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"cloneTw\").orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot(snapshot => {\r\n                const cloneTwArray = snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setNewTw(cloneTwArray);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TwFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {newTw.map(cloneTw => (\r\n                    <CloneTw\r\n                        key={cloneTw.id}\r\n                        cloneTwObj={cloneTw}\r\n                        isOwner={cloneTw.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navi = ({userObj}) => (\r\n    <nav>\r\n        <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n            <li>\r\n                <Link to=\"/\" style={{marginRight: 10}}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\"/>\r\n                    <span style={{marginTop: 10}}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}'s Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\nexport default Navi;","import React, {useEffect, useState} from \"react\";\r\nimport {authService, dbService} from \"../fbase\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default ({userObj}) => {\r\n\r\n    const history = useHistory();\r\n    const [newDispName, setNewDispName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const getCloneTw = async () => {\r\n        const tw = await dbService.collection(\"cloneTw\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        // console.log(tw.docs.map((doc) => doc.data()))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCloneTw();\r\n    }, [])\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: {value},\r\n        } = e;\r\n        setNewDispName(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (userObj.displayName !== newDispName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDispName,\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <span>My Profile</span>\r\n            <br/>\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"DISPLAY NAME\"\r\n                    value={newDispName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"UPDATE\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span\r\n                className=\"formBtn cancelBtn logOut\"\r\n                onClick={onLogOutClick}>Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navi from \"./Navi\";\r\nimport Profile from \"../routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser,isLogin,userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLogin && <Navi userObj={userObj}/>}\r\n            <Switch>\r\n                {isLogin ? (\r\n                    <div style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React, {useEffect, useState} from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"../fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged(\n            (user) => {\n                if (user) {\n                    if (user.displayName === null) {\n                        user.updateProfile({\n                            displayName: 'NONAME',\n                        });\n                    }\n                    setUserObj({\n                        displayName:user.displayName,\n                        uid:user.uid,\n                        updateProfile: (args) => user.updateProfile(args),\n                    });\n                } else {\n                    setUserObj(null);\n                }\n                setInit(true);\n            });\n    }, [])\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        // authService.currentUser 오브젝트의 내용이 매우 방대하기 때문에 렌더링하는데 문제가 발생한다.\n        // setUserObj 이하와 같이 필요한 object 만을 추려서 가져오도록 해줄 수 있다.\n\n        setUserObj({\n            displayName:user.displayName,\n            uid:user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n\n    }\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLogin={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Initializing\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport styles from './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App styles={styles}/>\n    </React.StrictMode>\n    , document.getElementById('root')\n);\n"],"sourceRoot":""}